// #safe: yes
// #target: macos-x64
module test;
enum Abc : char { ABC }

fn void main()
{
	int a;
	Abc x = (Abc)a;
	long z;
	Abc y = (Abc)z;
	a = 256;
	y = (Abc)a;
	a = -1;
	y = (Abc)a;
}

/* #expect: test.ll

define void @test.main() #0 {
entry:
  %a = alloca i32, align 4
  %x = alloca i8, align 1
  %z = alloca i64, align 8
  %y = alloca i8, align 1
  store i32 0, ptr %a, align 4
  %0 = load i32, ptr %a, align 4
  %lt = icmp slt i32 %0, 0
  br i1 %lt, label %panic, label %checkok
panic:                                            ; preds = %entry
  store i32 %0, ptr %taddr, align 4
  %1 = insertvalue %variant undef, ptr %taddr, 0
  %2 = insertvalue %variant %1, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %3 = getelementptr inbounds [1 x %variant], ptr %varargslots, i64 0, i64 0
  store %variant %2, ptr %3, align 16
  %4 = insertvalue %"variant[]" undef, ptr %varargslots, 0
  %5 = insertvalue %"variant[]" %4, i64 1, 1
  store %"variant[]" %5, ptr %indirectarg, align 8
  %6 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %6(ptr @.panic_msg, i64 7, ptr @.file, i64 19, ptr @.func, i64 4, i32 7, ptr byval(%"variant[]") align 8 %indirectarg)
  br label %checkok
checkok:                                          ; preds = %panic, %entry
  %ge = icmp sge i32 %0, 1
  br i1 %ge, label %panic1, label %checkok5
panic1:                                           ; preds = %checkok
  store i32 %0, ptr %taddr2, align 4
  %7 = insertvalue %variant undef, ptr %taddr2, 0
  %8 = insertvalue %variant %7, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %9 = getelementptr inbounds [1 x %variant], ptr %varargslots3, i64 0, i64 0
  store %variant %8, ptr %9, align 16
  %10 = insertvalue %"variant[]" undef, ptr %varargslots3, 0
  %11 = insertvalue %"variant[]" %10, i64 1, 1
  store %"variant[]" %11, ptr %indirectarg4, align 8
  %12 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %12(ptr @.panic_msg.1, i64 87, ptr @.file.2, i64 19, ptr @.func.3, i64 4, i32 7, ptr byval(%"variant[]") align 8 %indirectarg4)
  br label %checkok5
checkok5:                                         ; preds = %panic1, %checkok
  %trunc = trunc i32 %0 to i8
  store i8 %trunc, ptr %x, align 1
  store i64 0, ptr %z, align 8
  %13 = load i64, ptr %z, align 8
  %lt6 = icmp slt i64 %13, 0
  br i1 %lt6, label %panic7, label %checkok11
panic7:                                           ; preds = %checkok5
  store i64 %13, ptr %taddr8, align 8
  %14 = insertvalue %variant undef, ptr %taddr8, 0
  %15 = insertvalue %variant %14, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  %16 = getelementptr inbounds [1 x %variant], ptr %varargslots9, i64 0, i64 0
  store %variant %15, ptr %16, align 16
  %17 = insertvalue %"variant[]" undef, ptr %varargslots9, 0
  %18 = insertvalue %"variant[]" %17, i64 1, 1
  store %"variant[]" %18, ptr %indirectarg10, align 8
  %19 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %19(ptr @.panic_msg.4, i64 8, ptr @.file.5, i64 19, ptr @.func.6, i64 4, i32 9, ptr byval(%"variant[]") align 8 %indirectarg10)
  br label %checkok11
checkok11:                                        ; preds = %panic7, %checkok5
  %ge12 = icmp sge i64 %13, 1
  br i1 %ge12, label %panic13, label %checkok17
panic13:                                          ; preds = %checkok11
  store i64 %13, ptr %taddr14, align 8
  %20 = insertvalue %variant undef, ptr %taddr14, 0
  %21 = insertvalue %variant %20, i64 ptrtoint (ptr @"$ct.long" to i64), 1
  %22 = getelementptr inbounds [1 x %variant], ptr %varargslots15, i64 0, i64 0
  store %variant %21, ptr %22, align 16
  %23 = insertvalue %"variant[]" undef, ptr %varargslots15, 0
  %24 = insertvalue %"variant[]" %23, i64 1, 1
  store %"variant[]" %24, ptr %indirectarg16, align 8
  %25 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %25(ptr @.panic_msg.7, i64 87, ptr @.file.8, i64 19, ptr @.func.9, i64 4, i32 9, ptr byval(%"variant[]") align 8 %indirectarg16)
  br label %checkok17
checkok17:                                        ; preds = %panic13, %checkok11
  %trunc18 = trunc i64 %13 to i8
  store i8 %trunc18, ptr %y, align 1
  store i32 256, ptr %a, align 4
  %26 = load i32, ptr %a, align 4
  %lt19 = icmp slt i32 %26, 0
  br i1 %lt19, label %panic20, label %checkok24
panic20:                                          ; preds = %checkok17
  store i32 %26, ptr %taddr21, align 4
  %27 = insertvalue %variant undef, ptr %taddr21, 0
  %28 = insertvalue %variant %27, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %29 = getelementptr inbounds [1 x %variant], ptr %varargslots22, i64 0, i64 0
  store %variant %28, ptr %29, align 16
  %30 = insertvalue %"variant[]" undef, ptr %varargslots22, 0
  %31 = insertvalue %"variant[]" %30, i64 1, 1
  store %"variant[]" %31, ptr %indirectarg23, align 8
  %32 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %32(ptr @.panic_msg.10, i64 65, ptr @.file.11, i64 19, ptr @.func.12, i64 4, i32 11, ptr byval(%"variant[]") align 8 %indirectarg23)
  br label %checkok24
checkok24:                                        ; preds = %panic20, %checkok17
  %ge25 = icmp sge i32 %26, 1
  br i1 %ge25, label %panic26, label %checkok30
panic26:                                          ; preds = %checkok24
  store i32 %26, ptr %taddr27, align 4
  %33 = insertvalue %variant undef, ptr %taddr27, 0
  %34 = insertvalue %variant %33, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %35 = getelementptr inbounds [1 x %variant], ptr %varargslots28, i64 0, i64 0
  store %variant %34, ptr %35, align 16
  %36 = insertvalue %"variant[]" undef, ptr %varargslots28, 0
  %37 = insertvalue %"variant[]" %36, i64 1, 1
  store %"variant[]" %37, ptr %indirectarg29, align 8
  %38 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %38(ptr @.panic_msg.13, i64 87, ptr @.file.14, i64 19, ptr @.func.15, i64 4, i32 11, ptr byval(%"variant[]") align 8 %indirectarg29)
  br label %checkok30
checkok30:                                        ; preds = %panic26, %checkok24
  %trunc31 = trunc i32 %26 to i8
  store i8 %trunc31, ptr %y, align 1
  store i32 -1, ptr %a, align 4
  %39 = load i32, ptr %a, align 4
  %lt32 = icmp slt i32 %39, 0
  br i1 %lt32, label %panic33, label %checkok37
panic33:                                          ; preds = %checkok30
  store i32 %39, ptr %taddr34, align 4
  %40 = insertvalue %variant undef, ptr %taddr34, 0
  %41 = insertvalue %variant %40, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %42 = getelementptr inbounds [1 x %variant], ptr %varargslots35, i64 0, i64 0
  store %variant %41, ptr %42, align 16
  %43 = insertvalue %"variant[]" undef, ptr %varargslots35, 0
  %44 = insertvalue %"variant[]" %43, i64 1, 1
  store %"variant[]" %44, ptr %indirectarg36, align 8
  %45 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %45(ptr @.panic_msg.16, i64 65, ptr @.file.17, i64 19, ptr @.func.18, i64 4, i32 13, ptr byval(%"variant[]") align 8 %indirectarg36)
  br label %checkok37
checkok37:                                        ; preds = %panic33, %checkok30
  %ge38 = icmp sge i32 %39, 1
  br i1 %ge38, label %panic39, label %checkok43
panic39:                                          ; preds = %checkok37
  store i32 %39, ptr %taddr40, align 4
  %46 = insertvalue %variant undef, ptr %taddr40, 0
  %47 = insertvalue %variant %46, i64 ptrtoint (ptr @"$ct.int" to i64), 1
  %48 = getelementptr inbounds [1 x %variant], ptr %varargslots41, i64 0, i64 0
  store %variant %47, ptr %48, align 16
  %49 = insertvalue %"variant[]" undef, ptr %varargslots41, 0
  %50 = insertvalue %"variant[]" %49, i64 1, 1
  store %"variant[]" %50, ptr %indirectarg42, align 8
  %51 = load ptr, ptr @std.core.builtin.panic, align 8
  call void %51(ptr @.panic_msg.19, i64 87, ptr @.file.20, i64 19, ptr @.func.21, i64 4, i32 13, ptr byval(%"variant[]") align 8 %indirectarg42)
  br label %checkok43
checkok43:                                        ; preds = %panic39, %checkok37
  %trunc44 = trunc i32 %39 to i8
  store i8 %trunc44, ptr %y, align 1
  ret void
}
